# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

# 1. Login to SonarCloud.io using your GitHub account

# 2. Import your project on SonarCloud
#     * Add your GitHub organization first, then add your repository as a new project.
#     * Please note that many languages are eligible for automatic analysis,
#       which means that the analysis will start automatically without the need to set up GitHub Actions.
#     * This behavior can be changed in Administration > Analysis Method.
#
# 3. Follow the SonarCloud in-product tutorial
#     * a. Copy/paste the Project Key and the Organization Key into the args parameter below
#          (You'll find this information in SonarCloud. Click on "Information" at the bottom left)
#
#     * b. Generate a new token and add it to your Github repository's secrets using the name SONAR_TOKEN
#          (On SonarCloud, click on your avatar on top-right > My account > Security
#           or go directly to https://sonarcloud.io/account/security/)

# Feel free to take a look at our documentation (https://docs.sonarcloud.io/getting-started/github/)
# or reach out to our community forum if you need some help (https://community.sonarsource.com/c/help/sc/9)

name: SonarCloud analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@v2.2.0
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the SonarScanner CLI
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
           -Dsonar.projectKey=DomenickD_DataScience-IEX-USF
           -Dsonar.organization=domenickd
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false

# name: SonarCloud

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   sonarcloud:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: 0  # SonarCloud needs the full history to assign issues properly

#     - name: Set up Java
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'  # Ensure Java 17 is used
#         distribution: 'temurin'  # Specify the Java distribution

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.12.2'

#     - name: SonarCloud Scan
#       uses: SonarSource/sonarcloud-github-action@v1.9
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       with:
#         args: >
#           -Dsonar.projectKey=DomenickD_DataScience-IEX-USF
#           -Dsonar.organization=domenickd
#           -Dsonar.host.url=https://sonarcloud.io
#           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#           -Dsonar.cpp.file.suffixes=-
#           -Dsonar.objc.file.suffixes=-
#           -X
#     # - name: Install dependencies
#     #   run: |
#     #   # pip install -r requirements.txt
#     # # pip install pytest-cov  # Install pytest-cov for coverage report

#     # - name: Run tests with coverage
#     #  run: |
#     #    pytest --cov=. --cov-report xml:coverage.xml  # Run tests and generate coverage report

#     # - name: SonarCloud Scan
#     #   uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
#     #   env:
#     #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#     #   with:
#     #      args:
#     #        -Dsonar.projectKey=DomenickD_DataScience-IEX-USF
#     #        -Dsonar.organization=domenickd